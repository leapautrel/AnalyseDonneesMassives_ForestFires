+scale_color_brewer(palette="viridis")+
scale_fill_brewer(palette="viridis") +
scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15) # Penche les annees
)
plot_annee
# Graphiques non interactifs ----
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count", # Nombre de feux
aes(fill = stat_cause_descr), # Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_brewer(palette="viridis")+
scale_fill_brewer(palette="viridis") +
scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15) # Penche les annees
)
plot_annee
?scale_color_brewer
# Graphiques non interactifs ----
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count", # Nombre de feux
aes(fill = stat_cause_descr), # Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_brewer(palette="Set3")+
scale_fill_brewer(palette="Set3") +
scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15) # Penche les annees
)
plot_annee
# Graphiques non interactifs ----
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count", # Nombre de feux
aes(fill = stat_cause_descr), # Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_brewer(palette="Set3")+
scale_fill_brewer(palette="Set3") +
# scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15) # Penche les annees
)
plot_annee
palette="Set3"
palette
display.brewer.all()
library("RColorBrewer")
display.brewer.all()
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count",
# Nombre de feux
aes(fill = stat_cause_descr),
# Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_brewer(palette = palcol) +
scale_fill_brewer(palette = palcol) +
# scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15) # Penche les annees)
plot_annee
scale_fill_brewer(palette = palcol) +
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count",
# Nombre de feux
aes(fill = stat_cause_descr),
# Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_brewer(palette = palcol) +
scale_fill_brewer(palette = palcol) +
# scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15)) # Penche les annees)
plot_annee
palcol <- c("#FF0000FF", "#FF7600FF",
"#FFEB00FF", "#0d590f",
"#27FF00FF", "#0b210a",
"#00FFC4FF", "#872a0b",
"#7175f5", "#181ec9",
"#9D00FFFF", "#e685d4",
"#FF0076FF")
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count",
# Nombre de feux
aes(fill = stat_cause_descr),
# Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_brewer(palette = palcol) +
scale_fill_brewer(palette = palcol) +
# scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15)) # Penche les annees)
plot_annee
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count",
# Nombre de feux
aes(fill = stat_cause_descr),
# Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_manual(palette = palcol) +
scale_fill_manual(palette = palcol) +
# scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15)) # Penche les annees)
plot_annee
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count",
# Nombre de feux
aes(fill = stat_cause_descr),
# Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_manual(values = palcol) +
scale_fill_manual(values = palcol) +
# scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15)) # Penche les annees)
plot_annee
palcol <- c("#AEFF34", "#26FC4E",
"#2CFFB2", "#46B9FF",
"#5452FF", "#8B4AFF",
"#EC63FF", "#FF3591",
"#FF3B42", "#FF785D",
"#FF6C2C", "#FFBA6F",
"#FFBD24")
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count",
# Nombre de feux
aes(fill = stat_cause_descr),
# Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_manual(values = palcol) +
scale_fill_manual(values = palcol) +
# scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15)) # Penche les annees)
plot_annee
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count",
# Nombre de feux
aes(fill = stat_cause_descr),
# Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_manual(values = palcol) +
scale_fill_manual(values = palcol) +
scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15)) # Penche les annees)
plot_annee
# Graphique de l'annee
plot_annee <- ggplot(as.data.frame(fires), aes(x = fire_year)) +
geom_histogram(stat = "count",
# Nombre de feux
aes(fill = stat_cause_descr),
# Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_manual(values = palcol) +
scale_fill_manual(values = palcol,
name = "Cause of the fire") +
# scale_fill_discrete(name = "Cause of the fire") + # Nom de la legende
theme(axis.text.x = element_text(angle = 70, size = 15)) # Penche les annees)
plot_annee
# Graphique par mois
plot_mois <- ggplot(as.data.frame(fires), aes(x = month)) +
geom_histogram(stat = "count", # Nombre de feux
aes(fill = stat_cause_descr), # Couleur selon cause
position = "stack") + # Histogramme empile
labs(title = "", x = "", y = "") + # Titres
scale_color_manual(values = palcol) +
scale_fill_manual(values = palcol,
name = "Cause of the fire") +
scale_x_discrete(labels=c("1" = "January",
"2" = "February",
"3" = "March",
"4" = "April",
"5" = "May",
"6" = "June",
"7" = "July",
"8" = "August",
"9" = "September",
"10" = "October",
"11" = "November",
"12" = "December")) +
theme(axis.text.x = element_text(angle = 70, size = 15) # Penche les annees
)
runApp()
?tags$style
?tags$head
runApp()
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires), aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
fires %>%
group_by(STAT_CAUSE_DESCR) %>%
summarize(mean_size = mean(FIRE_SIZE, na.rm = TRUE)) %>%
ggplot(aes(x = reorder(STAT_CAUSE_DESCR, mean_size), y = mean_size)) +
geom_bar(stat = 'identity', fill = 'orange') +
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
?summarize
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = reorder(stat_cause_descr,
summarize(mean(fire_size, na.rm = TRUE))))) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
library(dplyr)							# summarize
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = reorder(stat_cause_descr,
dplyr::summarize(mean(fire_size, na.rm = TRUE))))) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
fires %>%
summarize(mean_size = mean(FIRE_SIZE, na.rm = TRUE))
fires %>%
summarize(mean_size = mean(fire_size, na.rm = TRUE))
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = reorder(stat_cause_descr,
dplyr::summarize(mean(fire_size, na.rm = TRUE))),
y = dplyr::summarize(mean(fire_size, na.rm = TRUE)))) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
fires %>%
summarize(mean_size = mean(fire_size, na.rm = TRUE))
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = reorder(stat_cause_descr,
dplyr::summarize(mean_size = mean(fire_size, na.rm = TRUE))),
y = dplyr::summarize(mean_size = mean(fire_size, na.rm = TRUE)))) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = reorder(stat_cause_descr,
dplyr::summarize(mean_size = mean(fires$fire_size, na.rm = TRUE))),
y = dplyr::summarize(mean_size = mean(fires$fire_size, na.rm = TRUE)))) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
?summarize
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = reorder(stat_cause_descr,
dplyr::summarize(.data = fires,
mean_size = mean(fire_size,
na.rm = TRUE))),
y = dplyr::summarize(.data = fires,
mean_size = mean(fire_size,
na.rm = TRUE)))) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
# G3. Taille selon la cause ----
fires %>%
summarize(mean_size = mean(fire_size, na.rm = TRUE)) +
ggplot(aes(x = reorder(STAT_CAUSE_DESCR, mean_size), y = mean_size)) +
geom_bar(stat = 'identity', fill = 'orange') +
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause') +
theme(axis.text.x = element_text(angle = 70, size = 15))
plot_taillecause
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
coord_flip() +
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
?coord_flip
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() + scale_x_reverse() +
labs(x = '', y = 'Acres', title = 'Average Wildfire Size by Cause')
plot_taillecause
df <- data.frame(x = 1:5, y = (1:5) ^ 2)
ggplot(df, aes(x, y)) +
geom_area()
last_plot() + coord_flip()
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average wildfire size by Cause')
plot_taillecause
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires[,list(stat_cause_descr, mean(fire_size)), by = stat_cause_descr]),
aes(x = stat_cause_descr)) +
geom_histogram(stat = "count") + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average wildfire size by Cause')
plot_taillecause
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires[,list(stat_cause_descr,
mean_size = mean(fire_size)),
by = stat_cause_descr]),
aes(x = stat_cause_descr,
y = mean_size)) +
geom_histogram() + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average wildfire size by Cause')
plot_taillecause
fires[,list(stat_cause_descr,
mean_size = mean(fire_size)),
by = stat_cause_descr]
# G3. Taille selon la cause ----
plot_taillecause <- ggplot(as.data.frame(fires[,list(mean_size = mean(fire_size)),
by = stat_cause_descr]),
aes(x = stat_cause_descr,
y = mean_size)) +
geom_histogram() + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average wildfire size by Cause')
plot_taillecause
fires[,list(mean_size = mean(fire_size)),
by = stat_cause_descr]
# G3. Taille moyenne selon la cause ----
taillecause <- fires[,list(mean_size = mean(fire_size)),
by = stat_cause_descr]
taillecause
plot_taillecause <- ggplot(as.data.frame(taillecause),
aes(x = reorder(stat_cause_descr, mean_size),
y = mean_size)) +
geom_histogram() + # Histogramme
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average wildfire size by Cause')
plot_taillecause
plot_taillecause <- ggplot(as.data.frame(taillecause),
aes(x = reorder(stat_cause_descr, mean_size),
y = mean_size)) +
geom_bar(stat = 'identity', fill = 'orange') +
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average wildfire size by Cause')
plot_taillecause <- ggplot(as.data.frame(taillecause),
aes(x = reorder(stat_cause_descr, mean_size),
y = mean_size)) +
geom_bar(stat = 'identity', fill = 'orange') +
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average wildfire size by Cause')
plot_taillecause
plot_taillecause <- ggplot(as.data.frame(taillecause),
aes(x = reorder(stat_cause_descr, mean_size),
y = mean_size)) +
geom_bar(stat = 'identity', fill = '#B83A1B') +
coord_flip() +
labs(x = '', y = 'Acres', title = 'Average wildfire size by Cause')
plot_taillecause
plot_taillecause <- ggplot(as.data.frame(taillecause),
aes(x = reorder(stat_cause_descr, mean_size),
y = mean_size)) +
geom_bar(stat = 'identity', fill = '#B83A1B') +
coord_flip() +
labs(x = '', y = 'Acres')
plot_taillecause
output$plot_mois <- renderPlot({plot_mois})
## 3. body -------------------------------
body <- dashboardBody(
tabItems(
## 3.1 Accueil -------------------------------------------------------------
tabItem(tabName = "accueil",
h1("Accueil"),
fluidRow(
box(
title = h2("Présentation"),
status = "warning",
width = 12,
solidHeader = F,
p("Du texte",
br(),
"Plus de texte")
)
),
# Ligne d'informations
fluidRow(
infoBox("Nombre de feux entre 1992 et 2015", nrow(fires), icon = icon("fire-extinguisher"), color = "aqua", width = 6),
infoBoxOutput("fireslighning", width = 6)
),
fluidRow(
infoBoxOutput("statemostfires", width = 6),
infoBoxOutput("causefreq", width = 6)
),
# Graphiques non interactifs
fluidRow(
column(9, align="center",
h2("Number of fires by year"),
plotOutput('plot_annee')),
column(9, align="center",
h2("Number of fires by month (1992-2015)"),
plotOutput('plot_mois')),
column(9, align="center",
h2("Average wildfire size by cause "),
plotOutput('plot_taillecause'))
)
),
## 3.2 Cartographie --------------------------------------------------------
tabItem(
tabName = "carto",
h1("Cartographie"),
fluidRow(
column(width = 12, align = "center",
box(
# Selection de l'intervalle de temps
dateRangeInput(
inputId = "idDateRange",
label = h2("Choose a time frame"),
start = "1992-01-01",
end = "2015-12-31",
format = "yyyy-mm-dd",
language = "fr",
separator = " to "
),
# Bouton update
actionButton("go_cartes", "Update time frame"),
# Options box
width = 12,
status = "warning",
solidHeader = FALSE,
collapsible = TRUE
)
)
),
# Affichage des cartes
fluidRow(
# Carte 1
column(12, align="center",
h2("Location and cause of the 10,000 largest fires in this time frame"),
tabPanel("carte 1.", leafletOutput("carte1")))),
# Carte 2
fluidRow(
column(12, align="center",
h2("Number of fires in each state in this time frame"),
tabPanel("carte 2.", leafletOutput("carte2")))
)
),
## 3.3 Prediction ----------------------------------------------------------
tabItem(tabName = "pred",
h1("Prédiction")
)
)
)
runApp()
runApp()
error()
runApp()
runApp()
plot_taillecause <- ggplot(as.data.frame(taillecause),
aes(x = reorder(stat_cause_descr, mean_size),
y = mean_size)) +
geom_bar(stat = 'identity', fill = '#B83A1B') +
coord_flip() +
labs(x = '', y = 'Acres')
plot_taillecause
runApp()
runApp()
runApp()
